# Jiro Docker Compose Environment Variables
# Copy this file to .env and fill in your values

# ======================
# Docker Ports Configuration
# ======================
JIRO_HTTP_PORT=8080
JIRO_HTTPS_PORT=8443
JIRO_ADDITIONAL_PORT=18090

# ======================
# MySQL Database Configuration
# ======================
DB_SERVER=mysql
MYSQL_DATABASE=jiro
MYSQL_USER=jiro
MYSQL_PASSWORD=your-secure-password-here
MYSQL_ROOT_PASSWORD=your-root-password-here
MYSQL_PORT=3306

# MySQL Health Check Configuration
MYSQL_HEALTH_CHECK_INTERVAL=30s
MYSQL_HEALTH_CHECK_TIMEOUT=10s
MYSQL_HEALTH_CHECK_RETRIES=3
MYSQL_HEALTH_CHECK_START_PERIOD=40s

# ======================
# Optional Jiro Configuration Overrides
# ======================
# Uncomment and set these in your docker-compose.yml environment section

# OpenAI Configuration (required for AI features)
# OPENAI_API_KEY=sk-your-openai-api-key-here

# JWT Configuration (required for authentication)
# JWT_SECRET=your-jwt-secret-minimum-32-characters
# JWT_ISSUER=Jiro
# JWT_AUDIENCE=JiroUsers

# Serilog Logging Configuration (optional overrides)
# Use these patterns to override log paths and levels:
# Serilog__WriteTo__1__Args__path=Data/Logs/custom-detailed_.txt
# Serilog__WriteTo__2__Args__path=Data/Logs/custom-errors_.txt
# Serilog__MinimumLevel__Default=Warning
# Serilog__MinimumLevel__Override__Microsoft=Warning
# Serilog__MinimumLevel__Override__System=Warning

# ======================
# Example Environment Variable Patterns
# ======================
# To override any appsettings.json value, use the pattern: SECTION__SUBSECTION__KEY
# Examples:
# - ConnectionStrings__JiroContext (overrides ConnectionStrings.JiroContext)
# - Chat__AuthToken (overrides Chat.AuthToken)
# - Serilog__WriteTo__1__Args__path (overrides Serilog.WriteTo[1].Args.path)