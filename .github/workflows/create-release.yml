name: Release Management

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-and-release:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Extract version from tag
        id: get_version
        run: |
          version=${GITHUB_REF#refs/tags/v}
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "Release version: $version"

      - name: Publish Release Artifacts
        run: |
          # Publish for multiple platforms with fresh restore for each runtime
          dotnet publish src/Jiro.Kernel/Jiro.App/Jiro.App.csproj \
            --configuration Release \
            --output ./publish/linux-x64 \
            --runtime linux-x64 \
            --self-contained true \
            -p:PublishSingleFile=true \
            -p:IncludeNativeLibrariesForSelfExtract=true
            
          dotnet publish src/Jiro.Kernel/Jiro.App/Jiro.App.csproj \
            --configuration Release \
            --output ./publish/win-x64 \
            --runtime win-x64 \
            --self-contained true \
            -p:PublishSingleFile=true \
            -p:IncludeNativeLibrariesForSelfExtract=true
            
          dotnet publish src/Jiro.Kernel/Jiro.App/Jiro.App.csproj \
            --configuration Release \
            --output ./publish/osx-x64 \
            --runtime osx-x64 \
            --self-contained true \
            -p:PublishSingleFile=true \
            -p:IncludeNativeLibrariesForSelfExtract=true

      - name: Create release archives
        run: |
          cd publish

          # Create archives for each platform
          tar -czf jiro-kernel-v${{ steps.get_version.outputs.version }}-linux-x64.tar.gz -C linux-x64 .
          zip -r jiro-kernel-v${{ steps.get_version.outputs.version }}-win-x64.zip win-x64/*
          tar -czf jiro-kernel-v${{ steps.get_version.outputs.version }}-osx-x64.tar.gz -C osx-x64 .

      - name: Read release notes from dev/tags/{version}
        id: release_notes
        run: |
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          cat dev/tags/release_notes_v${{ steps.get_version.outputs.version }}.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.get_version.outputs.version }}"
          name: "v${{ steps.get_version.outputs.version }}"
          body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: false
          files: |
            publish/jiro-kernel-v${{ steps.get_version.outputs.version }}-linux-x64.tar.gz
            publish/jiro-kernel-v${{ steps.get_version.outputs.version }}-win-x64.zip
            publish/jiro-kernel-v${{ steps.get_version.outputs.version }}-osx-x64.tar.gz
