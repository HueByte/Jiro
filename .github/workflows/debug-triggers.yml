name: Debug Workflow Triggers

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
    types:
      - opened
      - closed
      - synchronize

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug Event Information
        run: |
          echo "=== GITHUB EVENT DEBUG INFO ==="
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "SHA: ${{ github.sha }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run number: ${{ github.run_number }}"

          if [ "${{ github.event_name }}" = "push" ]; then
            echo "=== PUSH EVENT INFO ==="
            echo "Branch: ${{ github.ref_name }}"
            echo "Before SHA: ${{ github.event.before }}"
            echo "After SHA: ${{ github.event.after }}"
          fi

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "=== PULL REQUEST EVENT INFO ==="
            echo "PR Action: ${{ github.event.action }}"
            echo "PR Number: ${{ github.event.pull_request.number }}"
            echo "PR Merged: ${{ github.event.pull_request.merged }}"
            echo "Base branch: ${{ github.event.pull_request.base.ref }}"
            echo "Head branch: ${{ github.event.pull_request.head.ref }}"
          fi

          echo "=== CURRENT DATETIME ==="
          date

          echo "=== FILES CHANGED ==="
          git log --name-only -1 --pretty="" || echo "No files to show"

      - name: Check project version
        run: |
          echo "=== PROJECT VERSION CHECK ==="
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la

          echo "Looking for .csproj files:"
          find . -name "*.csproj" -type f | head -10

          if [ -f "src/Jiro.Kernel/Jiro.App/Jiro.App.csproj" ]; then
            echo "Found Jiro.App.csproj"
            VERSION=$(grep -oP '<Version>\K[^<]+' src/Jiro.Kernel/Jiro.App/Jiro.App.csproj || echo "not found")
            echo "Version: $VERSION"
          else
            echo "Jiro.App.csproj not found at expected path"
            echo "Searching for Jiro.App.csproj anywhere:"
            find . -name "Jiro.App.csproj" -type f || echo "No Jiro.App.csproj found"
          fi

      - name: List existing tags
        run: |
          echo "=== EXISTING TAGS ==="
          git tag --sort=-version:refname | head -10 || echo "No tags found"
